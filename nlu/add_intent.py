import yaml
import json

########################################################
domain_file_out = "domain.yml"
nlu_file_out = './data/nlu.md'
actions_file = 'actions.py'
stories_file = './data/stories.md'
########################################################

master_file = "master_file.json"

master = json.load(open(master_file, "r"))
domain_dict = {
        'intents': [], # list of tuples (name, [usage])
        'actions': [],
        'entities': [] # list of tuples (name, type) 
    }

for intent in master['intents']:
    domain_dict['intents'].append( (intent['name'], intent['usage']) )
    domain_dict['actions'].append(intent['action']['name'])

    for entity in intent['action']['slots']:
        domain_dict['entities'].append((entity['name'],entity['type']))

domain = open(domain_file_out, "w+")

domain.write('#############################################################\n\
# THIS IS AN AUTO-GENERATED FILE.\n\
# DO NOT MODIFY!\n\
# File generated by add_intent.py from master_file.json tempate\n\
#############################################################\n\n\n')

# Write intents
domain.write('\nintents:\n')
for intent in domain_dict['intents']:
    if intent[0]:
        domain.write('  - {}\n'.format(intent[0]))

# Write entities
domain.write('\nentities:\n')
for entity in domain_dict['entities']:
    domain.write('  - {}\n'.format(entity[0]))

# Write slots
domain.write('\nslots:\n')
for entity in domain_dict['entities']:
    domain.write('  {}:\n'.format(entity[0]))
    domain.write('      type: {}\n'.format(entity[1]))

# Write actions
domain.write('\nactions:\n')
for action in domain_dict['actions']:
    domain.write('  - {}\n'.format(action))

domain.write('\nsession_config:\
\n  session_expiration_time: 60\
\n  carry_over_slots_to_new_session: true')

domain.close()

nlu = open(nlu_file_out, 'w+')
nlu.write(
'[//]: # (WARNING!)\n\
[//]: # ( THIS IS AN AUTO-GENERATED FILE.)\n\
[//]: # ( DO NOT MODIFY!)\n\
[//]: # ( File generated by add_intent.py from master_file.json tempate)\n\n\n')

for intent in domain_dict['intents']:
    if intent[0]:
        nlu.write('## intent:{}\n'.format(intent[0]))
        for usage in intent[1]:
            nlu.write('- {}\n'.format(usage))
        nlu.write('\n')
nlu.close()




##############################################
### Story validation
##############################################
import re

stories = open('./data/stories.md').read()
for intent in domain_dict['intents']:
    if len([re.finditer(stories, intent[0])]) <2:
        print("WARNING: Not enough stories containing {}".format(intent[0]))


##############################################
### Story validation
##############################################

actions_file = open(actions_file).read()
for action in domain_dict['actions']:
    if action not in actions_file:
        print("WARNING: Action {} not implemented. Please add to {}".format(action, actions_file))